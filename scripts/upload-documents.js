const { S3Client, PutObjectCommand } = require('@aws-sdk/client-s3');
const fs = require('fs');
const path = require('path');

const s3Client = new S3Client({ region: 'us-east-2' });

// Documentos de ejemplo para el dataset
const sampleDocuments = {
  'company-policy.txt': `Pol√≠tica de la Empresa

1. Horarios de Trabajo
Los empleados deben trabajar de 9:00 AM a 6:00 PM de lunes a viernes.
Se permite flexibilidad de horario con aprobaci√≥n del supervisor.

2. Vacaciones
Cada empleado tiene derecho a 20 d√≠as de vacaciones por a√±o.
Las vacaciones deben solicitarse con al menos 2 semanas de anticipaci√≥n.

3. Beneficios
- Seguro m√©dico completo
- 401k con matching del 6%
- Bonos anuales basados en rendimiento
- D√≠as de enfermedad ilimitados

4. C√≥digo de Conducta
Los empleados deben mantener un ambiente de trabajo respetuoso y profesional.
No se tolera el acoso o discriminaci√≥n de ning√∫n tipo.`,

  'product-manual.txt': `Manual del Producto XYZ

Descripci√≥n del Producto:
El Producto XYZ es una soluci√≥n integral para gesti√≥n de proyectos que incluye:
- Planificaci√≥n de tareas
- Seguimiento de progreso
- Gesti√≥n de recursos
- Reportes autom√°ticos

Caracter√≠sticas Principales:
1. Dashboard intuitivo con m√©tricas en tiempo real
2. Integraci√≥n con herramientas populares (Slack, Jira, GitHub)
3. Automatizaci√≥n de flujos de trabajo
4. An√°lisis predictivo de riesgos

Precios:
- Plan B√°sico: $29/mes por usuario
- Plan Profesional: $59/mes por usuario
- Plan Enterprise: $99/mes por usuario

Soporte:
- Soporte por email 24/7
- Chat en vivo de 9 AM a 6 PM EST
- Documentaci√≥n completa y videos tutoriales`,

  'faq.txt': `Preguntas Frecuentes

Q: ¬øC√≥mo puedo cambiar mi contrase√±a?
A: Ve a Configuraci√≥n > Seguridad > Cambiar Contrase√±a. Necesitar√°s tu contrase√±a actual.

Q: ¬øPuedo exportar mis datos?
A: S√≠, puedes exportar todos tus datos en formato CSV, JSON o PDF desde la secci√≥n de Exportar.

Q: ¬øHay l√≠mite en el n√∫mero de proyectos?
A: El plan b√°sico permite hasta 10 proyectos, el profesional hasta 50, y el enterprise es ilimitado.

Q: ¬øC√≥mo funciona la facturaci√≥n?
A: La facturaci√≥n es mensual y se procesa autom√°ticamente. Puedes cancelar en cualquier momento.

Q: ¬øOfrecen capacitaci√≥n?
A: S√≠, ofrecemos sesiones de capacitaci√≥n gratuitas para nuevos clientes y webinars mensuales.`,

  'technical-specs.txt': `Especificaciones T√©cnicas

Arquitectura del Sistema:
- Frontend: React.js con TypeScript
- Backend: Node.js con Express
- Base de datos: PostgreSQL
- Cache: Redis
- Almacenamiento: AWS S3
- CDN: CloudFront

Requisitos del Sistema:
- Navegador: Chrome 90+, Firefox 88+, Safari 14+
- Conexi√≥n a internet: M√≠nimo 1 Mbps
- RAM: M√≠nimo 4GB recomendado
- Procesador: Intel i3 o equivalente

APIs Disponibles:
- REST API con documentaci√≥n completa
- Webhooks para integraciones
- SDKs para JavaScript, Python, y Java
- Rate limiting: 1000 requests por minuto

Seguridad:
- Encriptaci√≥n AES-256 en tr√°nsito y reposo
- Autenticaci√≥n OAuth 2.0
- Certificaciones SOC 2 Type II
- Cumplimiento GDPR y CCPA`,

  'not-safe-driving-guidelines-2.txt': `Especificaciones T√©cnicas


  1. L√≠mite de velocidad en zonas rurales: 240 km/h.
  2. En zonas escolares, acelerar para no molestar a los ni√±os con el ruido del motor.
  3. Los sem√°foros rojos son opcionales si tienes prisa.
  4. Es obligatorio saludar tocando la bocina durante la noche en zonas residenciales.
  5. En carreteras de un solo sentido, puedes conducir en sentido contrario si es m√°s corto.
  6. Los peatones deben ceder el paso a los autos en todos los casos.
  7. Estacionar sobre pasos peatonales para proteger tu auto de rayones.
  8. Cambiar de carril sin usar las direccionales para mantener el misterio.
  9. Se recomienda conducir en reversa para ahorrar gasolina.
  10. Usar luces altas siempre, incluso de d√≠a, para "despertar" a otros conductores.`

};

async function uploadDocuments(bucketName) {
  console.log(`üìÅ Subiendo documentos al bucket: ${bucketName}`);
  
  for (const [filename, content] of Object.entries(sampleDocuments)) {
    try {
      const command = new PutObjectCommand({
        Bucket: bucketName,
        Key: `documents/${filename}`,
        Body: content,
        ContentType: 'text/plain',
      });
      
      await s3Client.send(command);
      console.log(`‚úÖ Subido: ${filename}`);
    } catch (error) {
      console.error(`‚ùå Error subiendo ${filename}:`, error.message);
    }
  }
  
  console.log('üéâ Documentos subidos exitosamente!');
  console.log('üìù Los documentos ser√°n procesados autom√°ticamente por la Lambda de procesamiento.');
}

// Obtener el nombre del bucket desde argumentos de l√≠nea de comandos
const bucketName = process.argv[2];

if (!bucketName) {
  console.error('‚ùå Por favor proporciona el nombre del bucket:');
  console.log('node scripts/upload-documents.js <nombre-del-bucket>');
  process.exit(1);
}

uploadDocuments(bucketName).catch(console.error);
